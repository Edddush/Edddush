'''
Phrase= str(input())
P= []
for i in range (len(Phrase)):
    P.append(Phrase[i])
for i in range (len(P)):
    if P[i]=="(":
        if P[i+1]=="(":
            P[i]= "!"
            P[i+1]="error "
    if P[i]== ")":
        if i != 93:
            if P[i+1]==")":
                P[i]= "!"
                P[i+1]="error "
    else :
        continue
Final= ''.join(P)
print(Final)
'''
'''
#Import the required modules
import os

#Define the range of maze
def showMap(map):
   os.system("clear")
   for i in range(20):    
      for j in range(30):       
         print(map[i][j], end="")   
      print("")

#Define the variables:
map_list
x = 1
y = 1
p = 12 
q = 29 
showMap(map_list)
while x != p and y != q:    
   ch = input("Please input the direction(quit:ending)ï¼š")   
   #direction s    
   if (ch == "s"):        
      if map_list[x+1][y] != "#":            
         map_list[x][y] = " "            
         x += 1            
         map_list[x][y] = "O"
      showMap(map_list)

   #direction d           
   elif (ch == "d"):        
      if map_list[x][y+1] != "#":            
         map_list[x][y] = " "            
         y += 1            
         map_list[x][y] = "O"                
      showMap(map_list)  
          
   #direction w    
   elif (ch == "w"):        
      if map_list[x-1][y] != "#":            
         map_list[x][y] = " "            
         x -= 1            
         map_list[x][y] = "O"           
      showMap(map_list)       
        
   #direction a    
   elif (ch == "a"):        
      if map_list[x][y-1] != "#":            
         map_list[x][y] = " "            
         y -= 1            
         map_list[x][y] = "O"                
      showMap(map_list)              
      
#Define the ending
   if (ch == "quit"):        
      print("Ending")         
if x == p and y == q:    
   print("Congratulation.")


'''
from graphics import *

def main():

    win = GraphWin("My Circle", 500, 600)  
    c = Circle(Point(50,50), 10)  
    c.draw(win)  
    c.setFill("black")
    win.getMouse() # Pause to view result  
    win.close()    # Close window when done  
main()